{"componentChunkName":"component---src-page-templates-what-is-new-page-what-is-new-page-provider-tsx","path":"/what-is-new/3.3","result":{"pageContext":{"localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"id":"index","path":"/","name":"Главная"},{"id":"book-contents","path":"/book/chapters","name":"Оглавление"},{"id":"what-is-new-contents","path":"/what-is-new","name":"Что нового?"},{"id":"pdf","path":"/pdf","name":"PDF Версия"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопирована!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будующих специалистов ещё качественей и доступней!</b>"},"href":"#"}},"watchWithTelegramInformer":{"text":["Хочешь поддерживать свои знания в актуальном состоянии?","Тогда подписывайся на Telegram канал и узнавай обо всех изменениях!"],"subscribeButton":{"label":"Подписаться"}},"contentLevelUpInformer":{"text":"Кажется непонятным и слишком сложным? Чего-то не хватает? Расскажи об этом! Помоги сделать контент более доступным для следующих поколений!","buttons":[{"label":"Сообщить на Github","href":""}]}},"links":{"telegram":"#"},"appContent":{"contentNav":{"prevButton":{"label":"Назад"},"nextButton":{"label":"Вперед"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"https://t.me/nauchikus","tooltip":["Следить за","изменениями в","Telegram"],"label":"Следить за изменениями в Telegram"},"githubButton":{"href":"https://github.com/nauchikus/typescript-definitive-guide","tooltip":["Посетить проект на","Github"],"label":"Посетить проект на Github"}},"donateDropdown":{"href":"https://yasobe.ru/na/typescript_definitive_guide","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будующих поколений ещё качественей и доступней!","subtitle":{"__html":"Контент требует постоянного совершенстования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрийми участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Отправить"}}},"pdf":{"downloadPdfBookButton":{"title":"Скачать PDF Версию","href":"pdf/TypeScript Подробное Руководство.pdf"}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"appDescription":"Книга и документация в одном","subtitleAll":["TypeScript в деталях","TypeScript крупным планом","TypeScript под микроскопом","TypeScript со всех сторон"]}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Раскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"secondaryContentBar":{"editOnGithubButton":{"tooltip":"Редактировать на Github"}}}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"}}}},"not-found":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"notFound_404":{"status":"404","title":"Страница не найдена :("}}},"pdf":{"metadata":{"title":"TypeScript - в деталях","description":"Бесплатная pdf книга на русском по языку TypeScript."},"gui":{"title":"TypeScript Подробное Руководство","subtitle":"PDF Версия"}}}},"innovationData":{"versionMMP":"3.3","releaseHistory":[{"version":"3.3","dateRelease":"january 31, 2019"}],"mmp":"3.3","innovations":[{"mmp":"3.3","id":"","version":"3.3","innovationName":"Повышение производительности сборки для команды --build --watch","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"Повышение производительности сборки для команды --build --watch","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"povyshenie proizvoditelnosti sborki dlya komandy --build --watch\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Повышение производительности сборки для команды --build --watch</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Так как ссылки на проекты, появившиеся в версии <em>v3.0</em>, способны значительно упростить разработку крупных проектов, команда <em>TypeScript</em>, в версии <em>v3,3</em>, направив свои усилия на усовершенствование этого функционала, смогла ускорить процесс сборки при совместном использовании флагов <code>--build</code> и <code>--watch</code> на 50% - 75%, что действительно можно назвать впечатляющим результатом.</p>","commitInfoAll":[{"committedDate":"2020-08-14T10:46:48Z","message":"create github info configurator.","messageHeadline":"create github info configurator.","pushedDate":"2020-08-14T10:49:06Z","authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.3/Повышение производительности сборки для команды --build --watch/content.md"},{"mmp":"3.3","id":"","version":"3.3","innovationName":"Улучшение поведения для типов Union указанных в качестве параметров функции","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"Улучшение поведения для типов Union указанных в качестве параметров функции","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"uluchshenie povedeniya dlya tipov union ukazannyh v kachestve parametrov funkcii\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Улучшение поведения для типов Union указанных в качестве параметров функции</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">До версии <em>v3.3</em> было невозможно вызвать функцию даже если аргумент, передаваемый при вызове, принадлежал к типу, включенным в определение каждого объединенного типа указанного в аннотации параметров функциональных типов определяющих объединенный вызываемый тип к которому принадлежит вызываемая функция.</p>\n<p class=\"content__paragraph\">Вышесказанное с трудом поддается осмыслению, поэтому продолжить рассмотрение описанного случая лучше сразу на коде, который по шагам разберет завал из умных слов по полочкам.</p>\n<p class=\"content__paragraph\">Всем нам известно, что объединенный тип (<code>Union</code>) представляет из себя множество типов, к одному из которых может принадлежать ассоциированное с ним значение.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// До v3.3</span>\n\n<span class=\"token comment\">/**\n * Несовместимые типы A, B\n */</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Определение функционального типа параметры которого\n * принадлежат к типу Union определяющегося типами A и B\n */</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T0</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">|</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Декларация функции принадлежащий к функциональному типу T0\n */</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> f<span class=\"token operator\">:</span> <span class=\"token constant\">T0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok, аргумент принадлежащий к типу A; const f: (p: A | B) => number</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> b<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok, аргумент принадлежащий к типу B; const f: (p: A | B) => number</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nИз кода выше понятно, что компилятор, в случаи первого вызова, определяет принадлежность аргумента к типу </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">A</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, а во втором к типу </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">B</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">. Все предельно просто, поэтому перейдем к следующему шагу и расширим пример.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// До v3.3</span>\n\n<span class=\"token comment\">/**\n * Добавлен ещё один тип C\n * Несовместимые типы A, B и C\n */</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token punctuation\">{</span>\n    c<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * добавлена определение ещё одного функционального типа T1\n * параметры которого принадлежат к типу Union определяющегося\n * типами A и C и также отличным возвращаемым типом\n */</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T0</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">|</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T1</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">|</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Теперь декларация функции принадлежит к типу Union\n */</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> f<span class=\"token operator\">:</span> <span class=\"token constant\">T0</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, (error text is listed below)</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> b<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, (error text is listed below)</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, (error text is listed below)</span>\n\n<span class=\"token comment\">/**\n * Cannot invoke an expression whose type lacks a call\n * signature. Type 'T0 | T1' has no compatible call\n * signatures.ts(2349)\n */</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКак видно из кода выше, в случаях, когда вызываемая функция принадлежит к типу </span><span class=\"token template-punctuation string\">`</span></span>Union<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> определенному функциональными типами, в параметрах которых также указаны объединенные типы, даже не смотря на то, что их определение включает общий для всех тип </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">A</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, возникает ошибка. Это кажется нелогичным, так как тип объединение вызывающий ошибку определяется типами, которые по отдельности к ней не приводят.\n\nПоэтому начиная с версии _v3.3_ это поведение было изменено и теперь код из второго примера не приводит к ошибке.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// Начиная с v3.3</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token punctuation\">{</span>\n    c<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T0</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">|</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T1</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">|</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> f<span class=\"token operator\">:</span> <span class=\"token constant\">T0</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok, const f: (p: A | (A &amp; C) | (B &amp; A) | (B &amp; C)) => string | number</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> b<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, так как тип B определяет объединение указанное только в параметрах типа T0</span>\n<span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> c<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, так как тип С определяет объединение указанное только в параметрах типа T1</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКод выше наглядно демонстрирует сказанное, а именно тот факт, что при вызове функции с аргументом принадлежащем к типу </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">A</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, который является общим для всех определений типов Union, компилятор рассматривает вызываемую функцию основываясь сразу на двух функциональных типах </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">T0</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> и </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">T1</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> -\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">/**\n * Так компилятор начиная с v3.3 видит вызываемый тип\n */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">f</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">A</span> <span class=\"token operator\">&amp;</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">B</span> <span class=\"token operator\">&amp;</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">B</span> <span class=\"token operator\">&amp;</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКроме того, что уже известно на данный момент, также существует ещё один случай при котором новое поведение работать не будет. Таким случаем является ограничение на использование функциональных обобщены типов. Новое поведение не будет работать, если объединенный тип определяется более чем одним обобщенным вызываемым типом.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">/**\n * Тип A является обобщенным типом (generics type)\n */</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">A</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token punctuation\">{</span>\n    c<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * сигнатура обоих типов (T0 и T1) имеют\n * объявления параметров типа (T)\n */</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T0</span></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T1</span></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> f<span class=\"token operator\">:</span> <span class=\"token constant\">T0</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token generic-function\"><span class=\"token function\">f</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, (error text is listed below)</span>\n\n<span class=\"token comment\">/**\n * Cannot invoke an expression whose type lacks a call\n * signature. Type 'T0 | T1' has no compatible call\n * signatures.ts(2349)\n */</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКак уже было сказано, ошибка возникает из-за того, что оба типа </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">T0</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> и </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token constant\">T1</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> являются обобщенными. Но обобщенные типы в реальной практике обычное явление, при возникновении подобного случая единственных выход прибегнуть к механизму закрытия типазаполнителя.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">A</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span></span> <span class=\"token punctuation\">{</span>\n    a<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token punctuation\">{</span>\n    b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token punctuation\">{</span>\n    c<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Сигнатура только одного типа T0 является обобщенной.\n * В определении типа T1 тип A указан с закрытым параметром типа.\n */</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T0</span></span> <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">T1</span></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">:</span> <span class=\"token constant\">A</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> <span class=\"token constant\">C</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">const</span> f<span class=\"token operator\">:</span> <span class=\"token constant\">T0</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token generic-function\"><span class=\"token function\">f</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok, const f: &lt;number>(p: A&lt;number> | (B &amp; A&lt;number>) | (B &amp; C) | (A&lt;number> &amp; C)) => string | number</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКроме того, новое поведение отразилось на методе принадлежащему классу </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token builtin\">Array</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, а именно </span><span class=\"token template-punctuation string\">`</span></span>forEach<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">. До версии _v3.3_, в случаях когда операции выполнялись над объектом принадлежащем к объединенному типу определенного массивами принадлежащих к разным типам, итерировать с помощью метода </span><span class=\"token template-punctuation string\">`</span></span>forEach<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> над ним можно было лишь после его уточнения.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Bird</span> <span class=\"token punctuation\">{</span>\n    kind<span class=\"token operator\">:</span> <span class=\"token string\">'bird'</span><span class=\"token punctuation\">;</span>\n\n    uniqueBirdProp<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Fish</span> <span class=\"token punctuation\">{</span>\n    kind<span class=\"token operator\">:</span> <span class=\"token string\">'fish'</span><span class=\"token punctuation\">;</span>\n\n    uniqueFishProp<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isBirdAll</span><span class=\"token punctuation\">(</span>animalAll<span class=\"token operator\">:</span> Bird<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> Fish<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> animalAll <span class=\"token keyword\">is</span> Bird<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> animalAll<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">'bird'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/**\n * Параметр принадлежит к объединеному типу определяемого\n * типами массива принадлежащих к типам Bird и Fish\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>animalAll<span class=\"token operator\">:</span> Bird<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> Fish<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * Уточнение массива с посмощью защитника типа\n     */</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isBirdAll</span><span class=\"token punctuation\">(</span>animalAll<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animalAll<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// param animal is of type Bird</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        animalAll<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// param animal is of type Fish</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНачиная с версии _v3.3_ уточнение типа можно выполнять на уровне метода </span><span class=\"token template-punctuation string\">`</span></span>forEach<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> -\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Bird</span> <span class=\"token punctuation\">{</span>\n   kind<span class=\"token operator\">:</span> <span class=\"token string\">\"bird\"</span><span class=\"token punctuation\">;</span>\n\n   uniqueBirdProp<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Fish</span> <span class=\"token punctuation\">{</span>\n   kind<span class=\"token operator\">:</span> <span class=\"token string\">\"fish\"</span><span class=\"token punctuation\">;</span>\n\n   uniqueFishProp<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span> animalAll<span class=\"token operator\">:</span> Bird<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> Fish<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n   animalAll<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> animal<span class=\"token operator\">:</span> Bird <span class=\"token operator\">|</span> Fish <span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n       <span class=\"token comment\">/**\n        * Уточнение типа на уровне метода forEach\n        */</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> animal<span class=\"token punctuation\">.</span>kind <span class=\"token operator\">===</span> <span class=\"token string\">'bird'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n           <span class=\"token comment\">// param animal is of type Bird</span>\n       <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n           <span class=\"token comment\">// param animal is of type Fish</span>\n       <span class=\"token punctuation\">}</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars3.githubusercontent.com/u/31518738?v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.3/Улучшение поведения для типов Union указанных в качестве параметров функции/content.md"}]},"winTocTree":[{"id":"0","isCollapse":false,"index":0,"data":{"releaseHistory":[{"version":"3.3","dateRelease":"january 31, 2019"}],"mmp":"3.3","innovations":[{"id":"","version":"3.3","innovationName":"Повышение производительности сборки для команды --build --watch","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"Повышение производительности сборки для команды --build --watch"},{"id":"","version":"3.3","innovationName":"Улучшение поведения для типов Union указанных в качестве параметров функции","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"Улучшение поведения для типов Union указанных в качестве параметров функции"}]}},{"id":"1","isCollapse":false,"index":1,"data":{"releaseHistory":[{"version":"3.4","dateRelease":"March 29, 2019"}],"mmp":"3.4","innovations":[{"id":"","version":"3.4","innovationName":"Опции компилятора --tsBuildInfoFile","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Опции компилятора --tsBuildInfoFile"},{"id":"","version":"3.4","innovationName":"Опции компилятора --incremental","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Опции компилятора --incremental"},{"id":"","version":"3.4","innovationName":"Массивоподобные readonly типы","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Массивоподобные readonly типы"},{"id":"","version":"3.4","innovationName":"Расширенный тип ReadonlyArray","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Расширенный тип ReadonlyArray"},{"id":"","version":"3.4","innovationName":"Привидение к константе (const assertion)","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Привидение к константе (const assertion)"},{"id":"","version":"3.4","innovationName":"Проверка типов для globalThis","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Проверка типов для globalThis"}]}},{"id":"2","isCollapse":false,"index":2,"data":{"releaseHistory":[{"version":"3.5","dateRelease":"May 29, 2019"}],"mmp":"3.5","innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Вспомогательный тип Omit"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Введение нового флага --allowUmdGlobalAccess"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Улучшение механизма проверки объединенных типов"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Неявное ограничение обобщенных параметров типом unknown"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Изменение правил для типа unknown и индексной сигнатуре"},{"id":"","version":"3.5","innovationName":"Изменение логики для Object.keys для версии es5","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Изменение логики для Object.keys для версии es5"}]}},{"id":"3","isCollapse":false,"index":3,"data":{"releaseHistory":[{"version":"3.6","dateRelease":"August 28, 2019"}],"mmp":"3.6","innovations":[{"id":"","version":"3.6","innovationName":"Повышение типобезопасности генероторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Повышение типобезопасности генероторов"},{"id":"","version":"3.6","innovationName":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration"},{"id":"","version":"3.6","innovationName":"Расширение системы типов типами представляющими структуры данных только для чтения","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Расширение системы типов типами представляющими структуры данных только для чтения"},{"id":"","version":"3.6","innovationName":"Строковой идентификатор функции-конструктора","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Строковой идентификатор функции-конструктора"},{"id":"","version":"3.6","innovationName":"Расширение вывода об ошибках при работе с Promise","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Расширение вывода об ошибках при работе с Promise"},{"id":"","version":"3.6","innovationName":"Слияние одноименных классов и функций из окружающего контекста","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Слияние одноименных классов и функций из окружающего контекста"},{"id":"","version":"3.6","innovationName":"Добавлена поддержка Unicode для идентификаторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Добавлена поддержка Unicode для идентификаторов"},{"id":"","version":"3.6","innovationName":"Поддержка import.meta для SystemJS","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Поддержка import.meta для SystemJS"},{"id":"","version":"3.6","innovationName":"get и set в окружающем контексте","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"get и set в окружающем контексте"},{"id":"","version":"3.6","innovationName":"Api для поддержки --build и --incremental","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Api для поддержки --build и --incremental"},{"id":"","version":"3.6","innovationName":"Интеллектуальное определение синтаксиса авто-импорта","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Интеллектуальное определение синтаксиса авто-импорта"}]}},{"id":"4","isCollapse":false,"index":4,"data":{"releaseHistory":[{"version":"3.7","dateRelease":"November 5, 2019"},{"version":"3.7-rc","dateRelease":"November 4, 2019"},{"version":"3.7-beta","dateRelease":"November 3, 2019"},{"version":"3.7-alpha","dateRelease":"November 2, 2019"}],"mmp":"3.7","innovations":[{"id":"","version":"3.7-rc","innovationName":"Оператор опциональной последовательности (?.)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["исправление","Критическое изменение","Компилятор"],"path":"Оператор опциональной последовательности (?.)"},{"id":"","version":"3.7-rc","innovationName":"Оператор объединения со значением null (??)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["высокая ожидаемость"],"path":"Оператор объединения со значением null (??)"},{"id":"","version":"3.7-rc","innovationName":"Утверждение в сигнатуре (Signature Assertion)","dateRelease":"November 5, 2019","datePublication":"November 5, 2019","tags":["важно"],"path":"Утверждение в сигнатуре (Signature Assertion)"},{"id":"","version":"3.7-rc","innovationName":"Улучшена поддержка для типа never возвращаемого из функций","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["изменение"],"path":"Улучшена поддержка для типа never возвращаемого из функций"},{"id":"","version":"3.7-beta","innovationName":"Проверка невызванных функций","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["баг"],"path":"Проверка невызванных функций"},{"id":"","version":"3.7-beta","innovationName":"Рекурсивность для псевдононимов типов","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["компилятор"],"path":"Рекурсивность для псевдононимов типов"},{"id":"","version":"3.7-alpha","innovationName":"Совместное использование флагов --declaration и --allowJs","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["директивы"],"path":"Совместное использование флагов --declaration и --allowJs"},{"id":"","version":"3.7-alpha","innovationName":"@ts-nocheck в TypeScript файлах","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["общее"],"path":"@ts-nocheck в TypeScript файлах"}]}},{"id":"5","isCollapse":false,"index":5,"data":{"releaseHistory":[{"version":"3.8","dateRelease":"February 20, 2020"}],"mmp":"3.8","innovations":[{"id":"","version":"3.8","innovationName":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues"},{"id":"","version":"3.8","innovationName":"Закрытые поля ECMAScript","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Закрытые поля ECMAScript"},{"id":"","version":"3.8","innovationName":"await высшего уровня","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"await высшего уровня"},{"id":"","version":"3.8","innovationName":"Реализация новой формы ре-экспорта","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Реализация новой формы ре-экспорта"},{"id":"","version":"3.8","innovationName":"Новая конфигурационная группа параметров watchOptions","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Новая конфигурационная группа параметров watchOptions"},{"id":"","version":"3.8","innovationName":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Новый флаг --assumeChangesOnlyAffectDirectDependencies"},{"id":"","version":"3.8","innovationName":"Модификаторы JSDocs","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Модификаторы JSDocs"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any"}]}},{"id":"6","isCollapse":false,"index":6,"data":{"releaseHistory":[{"version":"3.9","dateRelease":"May 12, 2020"}],"mmp":"3.9","innovations":[{"id":"","version":"3.9","innovationName":"Улучшение вывода типа для Promise.all","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Улучшение вывода типа для Promise.all"},{"id":"","version":"3.9","innovationName":"Сокращение скорости компиляции","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Сокращение скорости компиляции"},{"id":"","version":"3.9","innovationName":"Комментарная директива @ts-expect-error","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Комментарная директива @ts-expect-error"},{"id":"","version":"3.9","innovationName":"Проверка вызова функции в тернарном условном операторе","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Проверка вызова функции в тернарном условном операторе"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку"}]}},{"id":"7","isCollapse":false,"index":7,"data":{"releaseHistory":[{"version":"4.0","dateRelease":"August 20, 2020"}],"mmp":"4.0","innovations":[{"id":"","version":"4.0","innovationName":"Вариативный кортеж","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Вариативный кортеж"},{"id":"","version":"4.0","innovationName":"Помеченные элементы кортежа","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Помеченные элементы кортежа"},{"id":"","version":"4.0","innovationName":"Операторы присваивания короткого замыкания","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Операторы присваивания короткого замыкания"},{"id":"","version":"4.0","innovationName":"Вывод типов для полей класса по параметрам конструктора","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Вывод типов для полей класса по параметрам конструктора"},{"id":"","version":"4.0","innovationName":"unknown как тип исключения блока catch","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"unknown как тип исключения блока catch"},{"id":"","version":"4.0","innovationName":"--noEmit совмещенный с --incremental","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"--noEmit совмещенный с --incremental"},{"id":"","version":"4.0","innovationName":"Пользовательская фабрика jsx фрагментов","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Пользовательская фабрика jsx фрагментов"},{"id":"","version":"4.0","innovationName":"Добавление комментарной директивы @deprecated","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Добавление комментарной директивы @deprecated"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение lib.d.ts","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение lib.d.ts"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Переопределение аксессоров полем и наоборот теперь является ошибкой","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Переопределение аксессоров полем и наоборот теперь является ошибкой"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Операнды для delete должны быть необязательными","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Операнды для delete должны быть необязательными"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение фабричного api Nodejs","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение фабричного api Nodejs"}]}},{"id":"8","isCollapse":false,"index":8,"data":{"releaseHistory":[{"version":"4.1@beta","dateRelease":"September 18, 2020","datePublication":"September 18, 2020"},{"version":"4.1@beta_1","dateRelease":"September 18, 2020","datePublication":"October 08, 2020"}],"colors":{"bookCoverColors":{"--color_light":"#fff","--color_middle-lite":"#93cf94","--color_accent":"#aff933","--color_ambient":"#a12d2d"},"bookUpdateCurrentVersionCoverColors":{"--color":"#265589"}},"mmp":"4.1","innovations":[{"id":"","version":"4.1@beta_1","innovationName":"Изменение механизма проверки индексной сигнатуры","dateRelease":"September 18, 2020","datePublication":"October 08, 2020","tags":["Нововведение"],"path":"Изменение механизма проверки индексной сигнатуры"},{"id":"","version":"4.1@beta","innovationName":"Шаблонный литеральный строковой тип","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Нововведение"],"path":"Шаблонный литеральный строковой тип"},{"id":"","version":"4.1@beta","innovationName":"Переопределение ключей в сопоставленных типах","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Нововведение"],"path":"Переопределение ключей в сопоставленных типах"},{"id":"","version":"4.1@beta","innovationName":"Рекурсивные условные типы","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"Рекурсивные условные типы"},{"id":"","version":"4.1@beta","innovationName":"paths без baseUrl","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"paths без baseUrl"},{"id":"","version":"4.1@beta","innovationName":"checkJs не требует активации allowJs","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"checkJs не требует активации allowJs"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные"}]}}],"pageNavDataAll":[{"name":"3.3","path":"3.3","sections":[{"name":"Повышение производительности сборки для команды --build --watch","path":"Повышение производительности сборки для команды --build --watch","data":{"version":"3.3"}},{"name":"Улучшение поведения для типов Union указанных в качестве параметров функции","path":"Улучшение поведения для типов Union указанных в качестве параметров функции","data":{"version":"3.3"}}]},{"name":"3.4","path":"3.4","sections":[{"name":"Опции компилятора --tsBuildInfoFile","path":"Опции компилятора --tsBuildInfoFile","data":{"version":"3.4"}},{"name":"Опции компилятора --incremental","path":"Опции компилятора --incremental","data":{"version":"3.4"}},{"name":"Массивоподобные readonly типы","path":"Массивоподобные readonly типы","data":{"version":"3.4"}},{"name":"Расширенный тип ReadonlyArray","path":"Расширенный тип ReadonlyArray","data":{"version":"3.4"}},{"name":"Привидение к константе (const assertion)","path":"Привидение к константе (const assertion)","data":{"version":"3.4"}},{"name":"Проверка типов для globalThis","path":"Проверка типов для globalThis","data":{"version":"3.4"}}]},{"name":"3.5","path":"3.5","sections":[{"name":"Вспомогательный тип Omit","path":"Вспомогательный тип Omit","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","path":"Улучшение механизма проверки избыточных полей в объедененных типах (Union types)","data":{"version":"3.5"}},{"name":"Введение нового флага --allowUmdGlobalAccess","path":"Введение нового флага --allowUmdGlobalAccess","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки объединенных типов","path":"Улучшение механизма проверки объединенных типов","data":{"version":"3.5"}},{"name":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","path":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","data":{"version":"3.5"}},{"name":"Неявное ограничение обобщенных параметров типом unknown","path":"Неявное ограничение обобщенных параметров типом unknown","data":{"version":"3.5"}},{"name":"Изменение правил для типа unknown и индексной сигнатуре","path":"Изменение правил для типа unknown и индексной сигнатуре","data":{"version":"3.5"}},{"name":"Изменение логики для Object.keys для версии es5","path":"Изменение логики для Object.keys для версии es5","data":{"version":"3.5"}}]},{"name":"3.6","path":"3.6","sections":[{"name":"Повышение типобезопасности генероторов","path":"Повышение типобезопасности генероторов","data":{"version":"3.6"}},{"name":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","path":"Добавление хелпера иметирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","data":{"version":"3.6"}},{"name":"Расширение системы типов типами представляющими структуры данных только для чтения","path":"Расширение системы типов типами представляющими структуры данных только для чтения","data":{"version":"3.6"}},{"name":"Строковой идентификатор функции-конструктора","path":"Строковой идентификатор функции-конструктора","data":{"version":"3.6"}},{"name":"Расширение вывода об ошибках при работе с Promise","path":"Расширение вывода об ошибках при работе с Promise","data":{"version":"3.6"}},{"name":"Слияние одноименных классов и функций из окружающего контекста","path":"Слияние одноименных классов и функций из окружающего контекста","data":{"version":"3.6"}},{"name":"Добавлена поддержка Unicode для идентификаторов","path":"Добавлена поддержка Unicode для идентификаторов","data":{"version":"3.6"}},{"name":"Поддержка import.meta для SystemJS","path":"Поддержка import.meta для SystemJS","data":{"version":"3.6"}},{"name":"get и set в окружающем контексте","path":"get и set в окружающем контексте","data":{"version":"3.6"}},{"name":"Api для поддержки --build и --incremental","path":"Api для поддержки --build и --incremental","data":{"version":"3.6"}},{"name":"Интеллектуальное определение синтаксиса авто-импорта","path":"Интеллектуальное определение синтаксиса авто-импорта","data":{"version":"3.6"}}]},{"name":"3.7","path":"3.7","sections":[{"name":"Оператор опциональной последовательности (?.)","path":"Оператор опциональной последовательности (?.)","data":{"version":"3.7-rc"}},{"name":"Оператор объединения со значением null (??)","path":"Оператор объединения со значением null (??)","data":{"version":"3.7-rc"}},{"name":"Утверждение в сигнатуре (Signature Assertion)","path":"Утверждение в сигнатуре (Signature Assertion)","data":{"version":"3.7-rc"}},{"name":"Улучшена поддержка для типа never возвращаемого из функций","path":"Улучшена поддержка для типа never возвращаемого из функций","data":{"version":"3.7-rc"}},{"name":"Проверка невызванных функций","path":"Проверка невызванных функций","data":{"version":"3.7-beta"}},{"name":"Рекурсивность для псевдононимов типов","path":"Рекурсивность для псевдононимов типов","data":{"version":"3.7-beta"}},{"name":"Совместное использование флагов --declaration и --allowJs","path":"Совместное использование флагов --declaration и --allowJs","data":{"version":"3.7-alpha"}},{"name":"@ts-nocheck в TypeScript файлах","path":"@ts-nocheck в TypeScript файлах","data":{"version":"3.7-alpha"}}]},{"name":"3.8","path":"3.8","sections":[{"name":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","path":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","data":{"version":"3.8"}},{"name":"Закрытые поля ECMAScript","path":"Закрытые поля ECMAScript","data":{"version":"3.8"}},{"name":"await высшего уровня","path":"await высшего уровня","data":{"version":"3.8"}},{"name":"Реализация новой формы ре-экспорта","path":"Реализация новой формы ре-экспорта","data":{"version":"3.8"}},{"name":"Новая конфигурационная группа параметров watchOptions","path":"Новая конфигурационная группа параметров watchOptions","data":{"version":"3.8"}},{"name":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","path":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","data":{"version":"3.8"}},{"name":"Модификаторы JSDocs","path":"Модификаторы JSDocs","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","data":{"version":"3.8"}}]},{"name":"3.9","path":"3.9","sections":[{"name":"Улучшение вывода типа для Promise.all","path":"Улучшение вывода типа для Promise.all","data":{"version":"3.9"}},{"name":"Сокращение скорости компиляции","path":"Сокращение скорости компиляции","data":{"version":"3.9"}},{"name":"Комментарная директива @ts-expect-error","path":"Комментарная директива @ts-expect-error","data":{"version":"3.9"}},{"name":"Проверка вызова функции в тернарном условном операторе","path":"Проверка вызова функции в тернарном условном операторе","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дескриминантными полями","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","data":{"version":"3.9"}}]},{"name":"4.0","path":"4.0","sections":[{"name":"Вариативный кортеж","path":"Вариативный кортеж","data":{"version":"4.0"}},{"name":"Помеченные элементы кортежа","path":"Помеченные элементы кортежа","data":{"version":"4.0"}},{"name":"Операторы присваивания короткого замыкания","path":"Операторы присваивания короткого замыкания","data":{"version":"4.0"}},{"name":"Вывод типов для полей класса по параметрам конструктора","path":"Вывод типов для полей класса по параметрам конструктора","data":{"version":"4.0"}},{"name":"unknown как тип исключения блока catch","path":"unknown как тип исключения блока catch","data":{"version":"4.0"}},{"name":"--noEmit совмещенный с --incremental","path":"--noEmit совмещенный с --incremental","data":{"version":"4.0"}},{"name":"Пользовательская фабрика jsx фрагментов","path":"Пользовательская фабрика jsx фрагментов","data":{"version":"4.0"}},{"name":"Добавление комментарной директивы @deprecated","path":"Добавление комментарной директивы @deprecated","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение lib.d.ts","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение lib.d.ts","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Переопределение аксессоров полем и наоборот теперь является ошибкой","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Переопределение аксессоров полем и наоборот теперь является ошибкой","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Операнды для delete должны быть необязательными","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Операнды для delete должны быть необязательными","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение фабричного api Nodejs","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение фабричного api Nodejs","data":{"version":"4.0"}}]},{"name":"4.1","path":"4.1","sections":[{"name":"Изменение механизма проверки индексной сигнатуры","path":"Изменение механизма проверки индексной сигнатуры","data":{"version":"4.1@beta_1"}},{"name":"Шаблонный литеральный строковой тип","path":"Шаблонный литеральный строковой тип","data":{"version":"4.1@beta"}},{"name":"Переопределение ключей в сопоставленных типах","path":"Переопределение ключей в сопоставленных типах","data":{"version":"4.1@beta"}},{"name":"Рекурсивные условные типы","path":"Рекурсивные условные типы","data":{"version":"4.1@beta"}},{"name":"paths без baseUrl","path":"paths без baseUrl","data":{"version":"4.1@beta"}},{"name":"checkJs не требует активации allowJs","path":"checkJs не требует активации allowJs","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","path":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","data":{"version":"4.1@beta"}}]}]}},"staticQueryHashes":["408059355","63159454"]}