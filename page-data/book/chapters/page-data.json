{"componentChunkName":"component---src-page-templates-book-toc-page-book-toc-page-provider-tsx","path":"/book/chapters","result":{"pageContext":{"localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"id":"index","path":"/","name":"Главная"},{"id":"book-contents","path":"/book/chapters","name":"Оглавление"},{"id":"what-is-new-contents","path":"/what-is-new","name":"Что нового?"},{"id":"pdf","path":"/pdf","name":"PDF Версия"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопирована!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будующих специалистов ещё качественей и доступней!</b>"},"href":"#"}},"watchWithTelegramInformer":{"text":["Хочешь поддерживать свои знания в актуальном состоянии?","Тогда подписывайся на Telegram канал и узнавай обо всех изменениях!"],"subscribeButton":{"label":"Подписаться"}},"contentLevelUpInformer":{"text":"Кажется непонятным и слишком сложным? Чего-то не хватает? Расскажи об этом! Помоги сделать контент более доступным для следующих поколений!","buttons":[{"label":"Сообщить на Github","href":""}]}},"links":{"telegram":"#"},"appContent":{"contentNav":{"prevButton":{"label":"Назад"},"nextButton":{"label":"Вперед"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"https://t.me/nauchikus","tooltip":["Следить за","изменениями в","Telegram"],"label":"Следить за изменениями в Telegram"},"githubButton":{"href":"https://github.com/nauchikus/typescript-definitive-guide","tooltip":["Посетить проект на","Github"],"label":"Посетить проект на Github"}},"donateDropdown":{"href":"https://yasobe.ru/na/typescript_definitive_guide","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будующих поколений ещё качественей и доступней!","subtitle":{"__html":"Контент требует постоянного совершенстования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрийми участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Отправить"}}},"pdf":{"downloadPdfBookButton":{"title":"Скачать PDF Версию","href":"pdf/TypeScript Подробное Руководство.pdf"}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"appDescription":"Книга и документация в одном","subtitleAll":["TypeScript в деталях","TypeScript крупным планом","TypeScript под микроскопом","TypeScript со всех сторон"]}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Раскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"secondaryContentBar":{"editOnGithubButton":{"tooltip":"Редактировать на Github"}}}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"}}}},"not-found":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"notFound_404":{"status":"404","title":"Страница не найдена :("}}},"pdf":{"metadata":{"title":"TypeScript - в деталях","description":"Бесплатная pdf книга на русском по языку TypeScript."},"gui":{"title":"TypeScript Подробное Руководство","subtitle":"PDF Версия"}}}},"bookTocTree":[{"id":"0","isCollapse":false,"index":0,"data":{"title":"Что такое и для чего нужен TypeScript","section":"Общее","path":"Что такое и для чего нужен TypeScript","subtitles":[{"subtitle":"Что такое TypeScript","path":"Что такое и для чего нужен TypeScript#Что такое TypeScript"},{"subtitle":"История TypeScript","path":"Что такое и для чего нужен TypeScript#История TypeScript"},{"subtitle":"Для чего нужен TypeScript","path":"Что такое и для чего нужен TypeScript#Для чего нужен TypeScript"},{"subtitle":"Зачем разработчику TypeScript","path":"Что такое и для чего нужен TypeScript#Зачем разработчику TypeScript"}]}},{"id":"1","isCollapse":false,"index":1,"data":{"title":"Вступление","section":"Экскурс в типизацию","path":"Вступление","subtitles":[]}},{"id":"2","isCollapse":false,"index":2,"data":{"title":"Система типов, тип данных, значимые и ссылочные типы","section":"Экскурс в типизацию","path":"Система типов, тип данных, значимые и ссылочные типы","subtitles":[{"subtitle":"Система Типов","path":"Система типов, тип данных, значимые и ссылочные типы#Система Типов"},{"subtitle":"Тип данных (тип)","path":"Система типов, тип данных, значимые и ссылочные типы#Тип данных (тип)"},{"subtitle":"Тип данных, передающийся по значению (примитивный тип)","path":"Система типов, тип данных, значимые и ссылочные типы#Тип данных, передающийся по значению (примитивный тип)"},{"subtitle":"Тип данных, передающийся по ссылке","path":"Система типов, тип данных, значимые и ссылочные типы#Тип данных, передающийся по ссылке"}]}},{"id":"3","isCollapse":false,"index":3,"data":{"title":"Связывание, типизация, вывод типов","section":"Экскурс в типизацию","path":"Связывание, типизация, вывод типов","subtitles":[{"subtitle":"Обработка кода компилятором","path":"Связывание, типизация, вывод типов#Обработка кода компилятором"},{"subtitle":"Лексический анализ (токенизация - tokenizing)","path":"Связывание, типизация, вывод типов#Лексический анализ (токенизация - tokenizing)"},{"subtitle":"Синтаксический анализ (разбор - parsing)","path":"Связывание, типизация, вывод типов#Синтаксический анализ (разбор - parsing)"},{"subtitle":"Семантический анализ","path":"Связывание, типизация, вывод типов#Семантический анализ"},{"subtitle":"Связывание (Binding)","path":"Связывание, типизация, вывод типов#Связывание (Binding)"},{"subtitle":"Типизация","path":"Связывание, типизация, вывод типов#Типизация"},{"subtitle":"Вывод Типов (type inference)","path":"Связывание, типизация, вывод типов#Вывод Типов (type inference)"}]}},{"id":"4","isCollapse":false,"index":4,"data":{"title":"Преобразование типов","section":"Экскурс в типизацию","path":"Преобразование типов","subtitles":[{"subtitle":"Неявные Преобразования","path":"Преобразование типов#Неявные Преобразования"},{"subtitle":"Явные Преобразования","path":"Преобразование типов#Явные Преобразования"}]}},{"id":"5","isCollapse":false,"index":5,"data":{"title":"Типизированные и нетипизированные языки программирования","section":"Экскурс в типизацию","path":"Типизированные и нетипизированные языки программирования","subtitles":[{"subtitle":"Нетипизированные языки","path":"Типизированные и нетипизированные языки программирования#Нетипизированные языки"},{"subtitle":"Типизированные языки","path":"Типизированные и нетипизированные языки программирования#Типизированные языки"}]}},{"id":"6","isCollapse":false,"index":6,"data":{"title":"Статическая и динамическая типизация","section":"Экскурс в типизацию","path":"Статическая и динамическая типизация","subtitles":[{"subtitle":"Статическая типизация (Static Typing)","path":"Статическая и динамическая типизация#Статическая типизация (Static Typing)"},{"subtitle":"Динамическая Типизация (Dynamic Typing)","path":"Статическая и динамическая типизация#Динамическая Типизация (Dynamic Typing)"}]}},{"id":"7","isCollapse":false,"index":7,"data":{"title":"Сильная и слабая типизация","section":"Экскурс в типизацию","path":"Сильная и слабая типизация","subtitles":[{"subtitle":"Сильная типизация (strongly typed)","path":"Сильная и слабая типизация#Сильная типизация (strongly typed)"},{"subtitle":"Слабая типизация (weakly typed)","path":"Сильная и слабая типизация#Слабая типизация (weakly typed)"}]}},{"id":"8","isCollapse":false,"index":8,"data":{"title":"Явная и неявная типизация","section":"Экскурс в типизацию","path":"Явная и неявная типизация","subtitles":[{"subtitle":"Явная типизация (explicit typing)","path":"Явная и неявная типизация#Явная типизация (explicit typing)"},{"subtitle":"Неявная типизация (implicit typing)","path":"Явная и неявная типизация#Неявная типизация (implicit typing)"}]}},{"id":"9","isCollapse":false,"index":9,"data":{"title":"Совместимость типов на основе вида типизации","section":"Экскурс в типизацию","path":"Совместимость типов на основе вида типизации","subtitles":[{"subtitle":"Совместимость типов (Types Compatibility)","path":"Совместимость типов на основе вида типизации#Совместимость типов (Types Compatibility)"},{"subtitle":"Номинативная Типизация (nominative typing)","path":"Совместимость типов на основе вида типизации#Номинативная Типизация (nominative typing)"},{"subtitle":"Структурная Типизация (structural typing)","path":"Совместимость типов на основе вида типизации#Структурная Типизация (structural typing)"},{"subtitle":"Утиная Типизация (Duck typing)","path":"Совместимость типов на основе вида типизации#Утиная Типизация (Duck typing)"}]}},{"id":"10","isCollapse":false,"index":10,"data":{"title":"Совместимость типов на основе вариантности","section":"Экскурс в типизацию","path":"Совместимость типов на основе вариантности","subtitles":[{"subtitle":"Вариантность","path":"Совместимость типов на основе вариантности#Вариантность"},{"subtitle":"Иерархия наследования","path":"Совместимость типов на основе вариантности#Иерархия наследования"},{"subtitle":"Ковариантность","path":"Совместимость типов на основе вариантности#Ковариантность"},{"subtitle":"Контравариантность","path":"Совместимость типов на основе вариантности#Контравариантность"},{"subtitle":"Инвариантность","path":"Совместимость типов на основе вариантности#Инвариантность"},{"subtitle":"Бивариантность","path":"Совместимость типов на основе вариантности#Бивариантность"}]}},{"id":"11","isCollapse":false,"index":11,"data":{"title":"Аннотация Типов","section":"Синтаксические конструкции","path":"Аннотация Типов","subtitles":[{"subtitle":"Аннотация Типов - общее","path":"Аннотация Типов#Аннотация Типов - общее"},{"subtitle":"Аннотация типа","path":"Аннотация Типов#Аннотация типа"},{"subtitle":"Синтаксические конструкции var, let, const","path":"Аннотация Типов#Синтаксические конструкции var, let, const"},{"subtitle":"Функции (function)","path":"Аннотация Типов#Функции (function)"},{"subtitle":"Стрелочные Функции (arrow function)","path":"Аннотация Типов#Стрелочные Функции (arrow function)"},{"subtitle":"Классы (class)","path":"Аннотация Типов#Классы (class)"},{"subtitle":"Сравнение Синтаксиса TypeScript и JavaScript","path":"Аннотация Типов#Сравнение Синтаксиса TypeScript и JavaScript"},{"subtitle":"Итог","path":"Аннотация Типов#Итог"}]}},{"id":"12","isCollapse":false,"index":12,"data":{"title":"Базовый Тип Any","section":"Типы","path":"Базовый Тип Any","subtitles":[{"subtitle":"Any (any) произвольный тип","path":"Базовый Тип Any#Any (any) произвольный тип"}]}},{"id":"13","isCollapse":false,"index":13,"data":{"title":"Примитивные типы Number, String, Boolean, Symbol, BigInt","section":"Типы","path":"Примитивные типы Number, String, Boolean, Symbol, BigInt","subtitles":[{"subtitle":"Важно","path":"Примитивные типы Number, String, Boolean, Symbol, BigInt#Важно"},{"subtitle":"Number (number) примитивный числовой тип","path":"Примитивные типы Number, String, Boolean, Symbol, BigInt#Number (number) примитивный числовой тип"},{"subtitle":"String (string) примитивный строковый тип","path":"Примитивные типы Number, String, Boolean, Symbol, BigInt#String (string) примитивный строковый тип"},{"subtitle":"Boolean (boolean) примитивный логический тип","path":"Примитивные типы Number, String, Boolean, Symbol, BigInt#Boolean (boolean) примитивный логический тип"},{"subtitle":"Symbol (symbol) примитивный символьный тип","path":"Примитивные типы Number, String, Boolean, Symbol, BigInt#Symbol (symbol) примитивный символьный тип"},{"subtitle":"BigInt (bigint) примитивный числовой тип","path":"Примитивные типы Number, String, Boolean, Symbol, BigInt#BigInt (bigint) примитивный числовой тип"}]}},{"id":"14","isCollapse":false,"index":14,"data":{"title":"Примитивные типы Null, Undefined, Void, Never, Unknown","section":"Типы","path":"Примитивные типы Null, Undefined, Void, Never, Unknown","subtitles":[{"subtitle":"Важно","path":"Примитивные типы Null, Undefined, Void, Never, Unknown#Важно"},{"subtitle":"Null (null) примитивный null тип","path":"Примитивные типы Null, Undefined, Void, Never, Unknown#Null (null) примитивный null тип"},{"subtitle":"Undefined (undefined) примитивный неопределенный тип","path":"Примитивные типы Null, Undefined, Void, Never, Unknown#Undefined (undefined) примитивный неопределенный тип"},{"subtitle":"Void (void) отсутствие конкретного типа","path":"Примитивные типы Null, Undefined, Void, Never, Unknown#Void (void) отсутствие конкретного типа"},{"subtitle":"Never (never) примитивный тип","path":"Примитивные типы Null, Undefined, Void, Never, Unknown#Never (never) примитивный тип"},{"subtitle":"Unknown (unknown)","path":"Примитивные типы Null, Undefined, Void, Never, Unknown#Unknown (unknown)"}]}},{"id":"15","isCollapse":false,"index":15,"data":{"title":"Примитивный Тип Enum","section":"Типы","path":"Примитивный Тип Enum","subtitles":[{"subtitle":"Enum (enum) примитивный перечисляемый тип","path":"Примитивный Тип Enum#Enum (enum) примитивный перечисляемый тип"},{"subtitle":"Перечисления с числовым значением","path":"Примитивный Тип Enum#Перечисления с числовым значением"},{"subtitle":"Перечисления со строковым значением","path":"Примитивный Тип Enum#Перечисления со строковым значением"},{"subtitle":"Смешанное перечисление (mixed enum)","path":"Примитивный Тип Enum#Смешанное перечисление (mixed enum)"},{"subtitle":"Перечисление в качестве типа данных","path":"Примитивный Тип Enum#Перечисление в качестве типа данных"},{"subtitle":"Перечисление const с числовым и строковым значением","path":"Примитивный Тип Enum#Перечисление const с числовым и строковым значением"},{"subtitle":"Когда стоит применять enum?","path":"Примитивный Тип Enum#Когда стоит применять enum?"}]}},{"id":"16","isCollapse":false,"index":16,"data":{"title":"Типы - Union, Intersection","section":"Типы","path":"Типы - Union, Intersection","subtitles":[{"subtitle":"Тип Объединение (Union Types)","path":"Типы - Union, Intersection#Тип Объединение (Union Types)"},{"subtitle":"Тип Пересечение (Intersection Type)","path":"Типы - Union, Intersection#Тип Пересечение (Intersection Type)"}]}},{"id":"17","isCollapse":false,"index":17,"data":{"title":"Type Queries (запросы типа), Alias (псевдонимы типа)","section":"Типы","path":"Type Queries (запросы типа), Alias (псевдонимы типа)","subtitles":[{"subtitle":"Запросы Типа (Type Queries)","path":"Type Queries (запросы типа), Alias (псевдонимы типа)#Запросы Типа (Type Queries)"},{"subtitle":"Псевдонимы Типов (Type Aliases)","path":"Type Queries (запросы типа), Alias (псевдонимы типа)#Псевдонимы Типов (Type Aliases)"}]}},{"id":"18","isCollapse":false,"index":18,"data":{"title":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum","section":"Типы","path":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum","subtitles":[{"subtitle":"Литеральный тип Number (Numeric Literal Types)","path":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum#Литеральный тип Number (Numeric Literal Types)"},{"subtitle":"Литеральный тип String (String Literal Types)","path":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum#Литеральный тип String (String Literal Types)"},{"subtitle":"Шаблонный литеральный тип String (Template String Literal Types)","path":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum#Шаблонный литеральный тип String (Template String Literal Types)"},{"subtitle":"Литеральный Тип Boolean (Boolean Literal Types)","path":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum#Литеральный Тип Boolean (Boolean Literal Types)"},{"subtitle":"Литеральный Тип Unique Symbol (unique symbol) уникальный символьный тип","path":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum#Литеральный Тип Unique Symbol (unique symbol) уникальный символьный тип"},{"subtitle":"Литеральный тип Enum (Enum Literal Types)","path":"Примитивные литеральные типы Number, String, Template String, Boolean, Unique Symbol, Enum#Литеральный тип Enum (Enum Literal Types)"}]}},{"id":"19","isCollapse":false,"index":19,"data":{"title":"Object, Array, Tuple","section":"Типы","path":"Object, Array, Tuple","subtitles":[{"subtitle":"Object (object) — ссылочный объектный тип","path":"Object, Array, Tuple#Object (object) — ссылочный объектный тип"},{"subtitle":"Array (type[]) ссылочный массивоподобный тип","path":"Object, Array, Tuple#Array (type[]) ссылочный массивоподобный тип"},{"subtitle":"Tuple ([T0, T1, …, Tn]) тип кортеж","path":"Object, Array, Tuple#Tuple ([T0, T1, …, Tn]) тип кортеж"}]}},{"id":"20","isCollapse":false,"index":20,"data":{"title":"Function, Functional Types","section":"Типы","path":"Function, Functional Types","subtitles":[{"subtitle":"Function Types - тип функция","path":"Function, Functional Types#Function Types - тип функция"},{"subtitle":"Functional Types - функциональный тип","path":"Function, Functional Types#Functional Types - функциональный тип"},{"subtitle":"this в сигнатуре функции","path":"Function, Functional Types#this в сигнатуре функции"}]}},{"id":"21","isCollapse":false,"index":21,"data":{"title":"Interfaces","section":"Типы","path":"Interfaces","subtitles":[{"subtitle":"Общая теория","path":"Interfaces#Общая теория"},{"subtitle":"Интерфейс в TypeScript","path":"Interfaces#Интерфейс в TypeScript"},{"subtitle":"Объявление (declaration)","path":"Interfaces#Объявление (declaration)"},{"subtitle":"Конвенции именования интерфейсов","path":"Interfaces#Конвенции именования интерфейсов"},{"subtitle":"Реализация интерфейса (implements)","path":"Interfaces#Реализация интерфейса (implements)"},{"subtitle":"Декларация свойств get и set (accessors)","path":"Interfaces#Декларация свойств get и set (accessors)"},{"subtitle":"Указание интерфейса в качестве типа (interface types)","path":"Interfaces#Указание интерфейса в качестве типа (interface types)"},{"subtitle":"Расширение интерфейсов (extends interface)","path":"Interfaces#Расширение интерфейсов (extends interface)"},{"subtitle":"Расширение интерфейсом класса (extends class)","path":"Interfaces#Расширение интерфейсом класса (extends class)"},{"subtitle":"Описание класса (функции-конструктора)","path":"Interfaces#Описание класса (функции-конструктора)"},{"subtitle":"Описание функционального выражения","path":"Interfaces#Описание функционального выражения"},{"subtitle":"Описание индексных членов в объектных типов","path":"Interfaces#Описание индексных членов в объектных типов"},{"subtitle":"Инлайн интерфейсы (Inline Interface)","path":"Interfaces#Инлайн интерфейсы (Inline Interface)"},{"subtitle":"Слияние интерфейсов","path":"Interfaces#Слияние интерфейсов"}]}},{"id":"22","isCollapse":false,"index":22,"data":{"title":"Объектные типы с индексными членами (объектный тип с динамическими ключами)","section":"Типы","path":"Объектные типы с индексными членами (объектный тип с динамическими ключами)","subtitles":[{"subtitle":"Индексные члены (определение динамических ключей)","path":"Объектные типы с индексными членами (объектный тип с динамическими ключами)#Индексные члены (определение динамических ключей)"},{"subtitle":"Строгая проверка при обращении к динамическим ключам","path":"Объектные типы с индексными членами (объектный тип с динамическими ключами)#Строгая проверка при обращении к динамическим ключам"}]}},{"id":"23","isCollapse":false,"index":23,"data":{"title":"Модификаторы доступа (Access Modifiers)","section":"Классы","path":"Модификаторы доступа (Access Modifiers)","subtitles":[{"subtitle":"Модификатор доступа public (публичный)","path":"Модификаторы доступа (Access Modifiers)#Модификатор доступа public (публичный)"},{"subtitle":"Модификатор доступа private (закрытый или скрытый)","path":"Модификаторы доступа (Access Modifiers)#Модификатор доступа private (закрытый или скрытый)"},{"subtitle":"Модификатор доступа protected (защищенный)","path":"Модификаторы доступа (Access Modifiers)#Модификатор доступа protected (защищенный)"},{"subtitle":"Модификаторы доступа и конструкторы класса","path":"Модификаторы доступа (Access Modifiers)#Модификаторы доступа и конструкторы класса"},{"subtitle":"Быстрое объявление полей","path":"Модификаторы доступа (Access Modifiers)#Быстрое объявление полей"}]}},{"id":"24","isCollapse":false,"index":24,"data":{"title":"Закрытые поля определенные спецификацией ECMAScript","section":"Классы","path":"Закрытые поля определенные спецификацией ECMAScript","subtitles":[{"subtitle":"Нативный закрытый (private) модификатор доступа","path":"Закрытые поля определенные спецификацией ECMAScript#Нативный закрытый (private) модификатор доступа"}]}},{"id":"25","isCollapse":false,"index":25,"data":{"title":"Абстрактные классы (abstract classes)","section":"Классы","path":"Абстрактные классы (abstract classes)","subtitles":[{"subtitle":"Общие характеристики","path":"Абстрактные классы (abstract classes)#Общие характеристики"},{"subtitle":"Теория","path":"Абстрактные классы (abstract classes)#Теория"}]}},{"id":"26","isCollapse":false,"index":26,"data":{"title":"Полиморфный тип this","section":"Классы","path":"Полиморфный тип this","subtitles":[{"subtitle":"this - как тип","path":"Полиморфный тип this#this - как тип"}]}},{"id":"27","isCollapse":false,"index":27,"data":{"title":"Модификатор readonly (только для чтения)","section":"Классы","path":"Модификатор readonly (только для чтения)","subtitles":[{"subtitle":"Модификатор readonly","path":"Модификатор readonly (только для чтения)#Модификатор readonly"}]}},{"id":"28","isCollapse":false,"index":28,"data":{"title":"Definite Assignment Assertion Modifier","section":"Классы","path":"Definite Assignment Assertion Modifier","subtitles":[{"subtitle":"Модификатор утверждения не принадлежности значения к типу undefined","path":"Definite Assignment Assertion Modifier#Модификатор утверждения не принадлежности значения к типу undefined"}]}},{"id":"29","isCollapse":false,"index":29,"data":{"title":"Классы — Тонкости","section":"Классы","path":"Классы — Тонкости","subtitles":[{"subtitle":"Классы - Тонкости implements","path":"Классы — Тонкости#Классы - Тонкости implements"},{"subtitle":"Частичное слияние интерфейса с классом","path":"Классы — Тонкости#Частичное слияние интерфейса с классом"},{"subtitle":"Переопределение свойств полями и наоборот при наследовании","path":"Классы — Тонкости#Переопределение свойств полями и наоборот при наследовании"}]}},{"id":"30","isCollapse":false,"index":30,"data":{"title":"Различия var, let, const и модификатора readonly при неявном указании примитивных типов","section":"Тонкости TypeScript","path":"Различия var, let, const и модификатора readonly при неявном указании примитивных типов","subtitles":[{"subtitle":"Нюансы на практике","path":"Различия var, let, const и модификатора readonly при неявном указании примитивных типов#Нюансы на практике"}]}},{"id":"31","isCollapse":false,"index":31,"data":{"title":"Операторы - Optional, Not-Null Not-Undefined, Definite Assignment Assertion","section":"Работа с типами","path":"Операторы - Optional, Not-Null Not-Undefined, Definite Assignment Assertion","subtitles":[{"subtitle":"Необязательные поля, параметры и методы (Optional Fields, Parameters and Methods)","path":"Операторы - Optional, Not-Null Not-Undefined, Definite Assignment Assertion#Необязательные поля, параметры и методы (Optional Fields, Parameters and Methods)"},{"subtitle":"Оператор ! (Non-Null and Non-Undefined Operator)","path":"Операторы - Optional, Not-Null Not-Undefined, Definite Assignment Assertion#Оператор ! (Non-Null and Non-Undefined Operator)"},{"subtitle":"Оператор ! (Definite Assignment Assertion)","path":"Операторы - Optional, Not-Null Not-Undefined, Definite Assignment Assertion#Оператор ! (Definite Assignment Assertion)"}]}},{"id":"32","isCollapse":false,"index":32,"data":{"title":"Обобщения (Generics)","section":"Типы","path":"Обобщения (Generics)","subtitles":[{"subtitle":"Обобщения - общие понятия","path":"Обобщения (Generics)#Обобщения - общие понятия"},{"subtitle":"Обобщения в TypeScript","path":"Обобщения (Generics)#Обобщения в TypeScript"},{"subtitle":"Параметры типа - extends (generic constraints)","path":"Обобщения (Generics)#Параметры типа - extends (generic constraints)"},{"subtitle":"Параметра типа - значение по умолчанию = (generic parameter defaults)","path":"Обобщения (Generics)#Параметра типа - значение по умолчанию = (generic parameter defaults)"},{"subtitle":"Параметры типа - как тип данных","path":"Обобщения (Generics)#Параметры типа - как тип данных"}]}},{"id":"33","isCollapse":false,"index":33,"data":{"title":"Дискриминантное объединение (Discriminated Union)","section":"Типы","path":"Дискриминантное объединение (Discriminated Union)","subtitles":[{"subtitle":"Дискриминантное объединение","path":"Дискриминантное объединение (Discriminated Union)#Дискриминантное объединение"}]}},{"id":"34","isCollapse":false,"index":34,"data":{"title":"Импорт и экспорт только типа","section":"Работа с типами","path":"Импорт и экспорт только типа","subtitles":[{"subtitle":"Предыстория возникновения import type и export type","path":"Импорт и экспорт только типа#Предыстория возникновения import type и export type"},{"subtitle":"import type и export type - форма объявления","path":"Импорт и экспорт только типа#import type и export type - форма объявления"},{"subtitle":"Импорт и экспорт только типа на практике","path":"Импорт и экспорт только типа#Импорт и экспорт только типа на практике"},{"subtitle":"Вспомогательный флаг --importsNotUsedAsValues","path":"Импорт и экспорт только типа#Вспомогательный флаг --importsNotUsedAsValues"}]}},{"id":"35","isCollapse":false,"index":35,"data":{"title":"Утверждение типов (Type Assertion)","section":"Типизация","path":"Утверждение типов (Type Assertion)","subtitles":[{"subtitle":"Утверждение типов - общее","path":"Утверждение типов (Type Assertion)#Утверждение типов - общее"},{"subtitle":"Утверждение типа <Type> синтаксис","path":"Утверждение типов (Type Assertion)#Утверждение типа <Type> синтаксис"},{"subtitle":"Утверждение типа с помощью оператора as","path":"Утверждение типов (Type Assertion)#Утверждение типа с помощью оператора as"},{"subtitle":"Приведение (утверждение) к константе (const assertion)","path":"Утверждение типов (Type Assertion)#Приведение (утверждение) к константе (const assertion)"},{"subtitle":"Утверждение в сигнатуре (Signature Assertion)","path":"Утверждение типов (Type Assertion)#Утверждение в сигнатуре (Signature Assertion)"}]}},{"id":"36","isCollapse":false,"index":36,"data":{"title":"Защитники типа","section":"Типизация","path":"Защитники типа","subtitles":[{"subtitle":"Защитники Типа - общее","path":"Защитники типа#Защитники Типа - общее"},{"subtitle":"Сужение диапазона множества типов на основе типа данных","path":"Защитники типа#Сужение диапазона множества типов на основе типа данных"},{"subtitle":"Сужение диапазона множества типов на основе признаков присущих типу Tagged Union","path":"Защитники типа#Сужение диапазона множества типов на основе признаков присущих типу Tagged Union"},{"subtitle":"Сужение диапазона множества типов на основе доступных членов объекта","path":"Защитники типа#Сужение диапазона множества типов на основе доступных членов объекта"},{"subtitle":"Сужение диапазона множества типов на основе функции, определенной пользователем","path":"Защитники типа#Сужение диапазона множества типов на основе функции, определенной пользователем"}]}},{"id":"37","isCollapse":false,"index":37,"data":{"title":"Вывод типов","section":"Типизация","path":"Вывод типов","subtitles":[{"subtitle":"Вывод типов - общие сведения","path":"Вывод типов#Вывод типов - общие сведения"},{"subtitle":"Вывод примитивных типов","path":"Вывод типов#Вывод примитивных типов"},{"subtitle":"Вывод примитивных типов для констант (const) и полей только для чтения (readonly)","path":"Вывод типов#Вывод примитивных типов для констант (const) и полей только для чтения (readonly)"},{"subtitle":"Вывод объектных типов","path":"Вывод типов#Вывод объектных типов"},{"subtitle":"Вывод типа для полей класса на основе инициализации их в конструкторе","path":"Вывод типов#Вывод типа для полей класса на основе инициализации их в конструкторе"},{"subtitle":"Вывод объединенных (Union) типов","path":"Вывод типов#Вывод объединенных (Union) типов"},{"subtitle":"Вывод пересечения (Intersection) с дискриминантными полями","path":"Вывод типов#Вывод пересечения (Intersection) с дискриминантными полями"},{"subtitle":"Вывод типов кортеж (Tuple)","path":"Вывод типов#Вывод типов кортеж (Tuple)"}]}},{"id":"38","isCollapse":false,"index":38,"data":{"title":"Совместимость объектных типов (Compatible Object Types)","section":"Типизация","path":"Совместимость объектных типов (Compatible Object Types)","subtitles":[{"subtitle":"Важно","path":"Совместимость объектных типов (Compatible Object Types)#Важно"},{"subtitle":"Совместимость объектных типов в TypeScript","path":"Совместимость объектных типов (Compatible Object Types)#Совместимость объектных типов в TypeScript"}]}},{"id":"39","isCollapse":false,"index":39,"data":{"title":"Совместимость функциональных типов (Compatible Function Types)","section":"Типизация","path":"Совместимость функциональных типов (Compatible Function Types)","subtitles":[{"subtitle":"Важно","path":"Совместимость функциональных типов (Compatible Function Types)#Важно"},{"subtitle":"Совместимость параметров","path":"Совместимость функциональных типов (Compatible Function Types)#Совместимость параметров"},{"subtitle":"Совместимость возвращаемого значения","path":"Совместимость функциональных типов (Compatible Function Types)#Совместимость возвращаемого значения"}]}},{"id":"40","isCollapse":false,"index":40,"data":{"title":"Совместимость объединений (Union Types)","section":"Типизация","path":"Совместимость объединений (Union Types)","subtitles":[{"subtitle":"Совместимость","path":"Совместимость объединений (Union Types)#Совместимость"}]}},{"id":"41","isCollapse":false,"index":41,"data":{"title":"Типизация в TypeScript","section":"Типизация","path":"Типизация в TypeScript","subtitles":[{"subtitle":"Общие сведения","path":"Типизация в TypeScript#Общие сведения"},{"subtitle":"Статическая типизация (static typing)","path":"Типизация в TypeScript#Статическая типизация (static typing)"},{"subtitle":"Сильная типизация (strongly typed)","path":"Типизация в TypeScript#Сильная типизация (strongly typed)"},{"subtitle":"Явно типизированный (explicit typing) с выводом типов (type inference)","path":"Типизация в TypeScript#Явно типизированный (explicit typing) с выводом типов (type inference)"},{"subtitle":"Совместимость типов (Type Compatibility), структурная типизация (structural typing)","path":"Типизация в TypeScript#Совместимость типов (Type Compatibility), структурная типизация (structural typing)"},{"subtitle":"Вариантность (variance)","path":"Типизация в TypeScript#Вариантность (variance)"},{"subtitle":"Наилучший общий тип (Best common type)","path":"Типизация в TypeScript#Наилучший общий тип (Best common type)"},{"subtitle":"Контекстный тип (Contextual Type)","path":"Типизация в TypeScript#Контекстный тип (Contextual Type)"}]}},{"id":"42","isCollapse":false,"index":42,"data":{"title":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -","section":"Работа с типами","path":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -","subtitles":[{"subtitle":"Запрос ключей keyof","path":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -#Запрос ключей keyof"},{"subtitle":"Поиск типов (Lookup Types)","path":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -#Поиск типов (Lookup Types)"},{"subtitle":"Сопоставление типов (Mapped Types)","path":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -#Сопоставление типов (Mapped Types)"},{"subtitle":"Префиксы + и - в сопоставленных типах","path":"Оператор keyof, Lookup Types, Mapped Types, Mapped Types - префиксы + и -#Префиксы + и - в сопоставленных типах"}]}},{"id":"43","isCollapse":false,"index":43,"data":{"title":"Условные типы (Conditional Types)","section":"Работа с типами","path":"Условные типы (Conditional Types)","subtitles":[{"subtitle":"Условные типы на практике","path":"Условные типы (Conditional Types)#Условные типы на практике"},{"subtitle":"Распределительные условные типы (Distributive Conditional Types)","path":"Условные типы (Conditional Types)#Распределительные условные типы (Distributive Conditional Types)"},{"subtitle":"Вывод типов в условном типе","path":"Условные типы (Conditional Types)#Вывод типов в условном типе"}]}},{"id":"44","isCollapse":false,"index":44,"data":{"title":"Readonly, Partial, Required, Pick, Record","section":"Расширенные типы","path":"Readonly, Partial, Required, Pick, Record","subtitles":[{"subtitle":"Readonly<T> (сделать члены объекта только для чтения)","path":"Readonly, Partial, Required, Pick, Record#Readonly<T> (сделать члены объекта только для чтения)"},{"subtitle":"Partial<T> (сделать все члены объекта необязательными)","path":"Readonly, Partial, Required, Pick, Record#Partial<T> (сделать все члены объекта необязательными)"},{"subtitle":"Required<T> (сделать все необязательные члены обязательными)","path":"Readonly, Partial, Required, Pick, Record#Required<T> (сделать все необязательные члены обязательными)"},{"subtitle":"Pick (отфильтровать объектный тип)","path":"Readonly, Partial, Required, Pick, Record#Pick (отфильтровать объектный тип)"},{"subtitle":"Record<K, T> (динамически определить поле в объектном типе)","path":"Readonly, Partial, Required, Pick, Record#Record<K, T> (динамически определить поле в объектном типе)"}]}},{"id":"45","isCollapse":false,"index":45,"data":{"title":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit","section":"Расширенные типы","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit","subtitles":[{"subtitle":"Exclude<T, U> (исключает из T признаки присущие U)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#Exclude<T, U> (исключает из T признаки присущие U)"},{"subtitle":"Extract<T, U> (общие для двух типов признаки)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#Extract<T, U> (общие для двух типов признаки)"},{"subtitle":"NonNullable<T> (удаляет типы null и undefined)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#NonNullable<T> (удаляет типы null и undefined)"},{"subtitle":"ReturnType<T> (получить тип значения возвращаемого функцией)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#ReturnType<T> (получить тип значения возвращаемого функцией)"},{"subtitle":"InstanceType<T> (получить через тип класса тип его экземпляра)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#InstanceType<T> (получить через тип класса тип его экземпляра)"},{"subtitle":"Parameters<T> (получить тип размеченного кортежа описывающий параметры функционального типа)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#Parameters<T> (получить тип размеченного кортежа описывающий параметры функционального типа)"},{"subtitle":"ConstructorParameters<T> (получить через тип класса размеченный кортеж описывающий параметры его конструктора)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#ConstructorParameters<T> (получить через тип класса размеченный кортеж описывающий параметры его конструктора)"},{"subtitle":"Omit<T, K> (исключить из T признаки ассоциированными с ключами перечисленных множеством K)","path":"Exclude, Extract, NonNullable, ReturnType, InstanceType, Omit#Omit<T, K> (исключить из T признаки ассоциированными с ключами перечисленных множеством K)"}]}},{"id":"46","isCollapse":false,"index":46,"data":{"title":"Массивоподобные readonly типы, ReadonlyArray, ReadonlyMap, ReadonlySet","section":"Расширенные типы","path":"Массивоподобные readonly типы, ReadonlyArray, ReadonlyMap, ReadonlySet","subtitles":[{"subtitle":"Массивоподобные readonly типы (модифицировать непосредственно в аннотации типа)","path":"Массивоподобные readonly типы, ReadonlyArray, ReadonlyMap, ReadonlySet#Массивоподобные readonly типы (модифицировать непосредственно в аннотации типа)"},{"subtitle":"ReadonlyArray<T> (неизменяемый массив)","path":"Массивоподобные readonly типы, ReadonlyArray, ReadonlyMap, ReadonlySet#ReadonlyArray<T> (неизменяемый массив)"},{"subtitle":"ReadonlyMap<K, V> (неизменяемая карта)","path":"Массивоподобные readonly типы, ReadonlyArray, ReadonlyMap, ReadonlySet#ReadonlyMap<K, V> (неизменяемая карта)"},{"subtitle":"ReadonlySet<T> (неизменяемое множество)","path":"Массивоподобные readonly типы, ReadonlyArray, ReadonlyMap, ReadonlySet#ReadonlySet<T> (неизменяемое множество)"}]}},{"id":"47","isCollapse":false,"index":47,"data":{"title":"Синтаксические конструкции и операторы","section":"Синтаксические конструкции","path":"Синтаксические конструкции и операторы","subtitles":[{"subtitle":"Операторы присваивания короткого замыкания (&&=, ||=, &&=)","path":"Синтаксические конструкции и операторы#Операторы присваивания короткого замыкания (&&=, ||=, &&=)"},{"subtitle":"Операнды для delete должны быть необязательными","path":"Синтаксические конструкции и операторы#Операнды для delete должны быть необязательными"}]}},{"id":"48","isCollapse":false,"index":48,"data":{"title":"Типизированный React","section":"React","path":"Типизированный React","subtitles":[{"subtitle":"Расширение .tsx","path":"Типизированный React#Расширение .tsx"}]}},{"id":"49","isCollapse":false,"index":49,"data":{"title":"Функциональные компоненты","section":"React","path":"Функциональные компоненты","subtitles":[{"subtitle":"Определение компонента как Function Declaration","path":"Функциональные компоненты#Определение компонента как Function Declaration"},{"subtitle":"Определение компонента как Function Expression","path":"Функциональные компоненты#Определение компонента как Function Expression"}]}},{"id":"50","isCollapse":false,"index":50,"data":{"title":"Классовые компоненты","section":"React","path":"Классовые компоненты","subtitles":[{"subtitle":"Производные от Component<P, S, SS>","path":"Классовые компоненты#Производные от Component<P, S, SS>"},{"subtitle":"Производные от PureComponent<Props, State, Snapshot>","path":"Классовые компоненты#Производные от PureComponent<Props, State, Snapshot>"}]}},{"id":"51","isCollapse":false,"index":51,"data":{"title":"Универсальные компоненты","section":"React","path":"Универсальные компоненты","subtitles":[{"subtitle":"Обобщенные компоненты (Generics Component)","path":"Универсальные компоненты#Обобщенные компоненты (Generics Component)"}]}},{"id":"52","isCollapse":false,"index":52,"data":{"title":"Типизированные хуки","section":"React","path":"Типизированные хуки","subtitles":[{"subtitle":"Предопределенные хуки - useState<T>()","path":"Типизированные хуки#Предопределенные хуки - useState<T>()"},{"subtitle":"Предопределенные хуки - useEffect() и useLayoutEffect()","path":"Типизированные хуки#Предопределенные хуки - useEffect() и useLayoutEffect()"},{"subtitle":"Предопределенные хуки - useContext<T>()","path":"Типизированные хуки#Предопределенные хуки - useContext<T>()"},{"subtitle":"Предопределенные хуки - useReducer<R>()","path":"Типизированные хуки#Предопределенные хуки - useReducer<R>()"},{"subtitle":"Предопределенные хуки - useCallback<T>()","path":"Типизированные хуки#Предопределенные хуки - useCallback<T>()"},{"subtitle":"Предопределенные хуки - useRef<T>()","path":"Типизированные хуки#Предопределенные хуки - useRef<T>()"},{"subtitle":"Предопределенные хуки - useImperativeHandle<T, R>()","path":"Типизированные хуки#Предопределенные хуки - useImperativeHandle<T, R>()"},{"subtitle":"Предопределенные хуки - useMemo<T>()","path":"Типизированные хуки#Предопределенные хуки - useMemo<T>()"},{"subtitle":"Предопределенные хуки - useDebugValue<T>()","path":"Типизированные хуки#Предопределенные хуки - useDebugValue<T>()"},{"subtitle":"Пользовательский хук","path":"Типизированные хуки#Пользовательский хук"}]}},{"id":"53","isCollapse":false,"index":53,"data":{"title":"Контекст (Context)","section":"React","path":"Контекст (Context)","subtitles":[{"subtitle":"Определение контекста","path":"Контекст (Context)#Определение контекста"}]}},{"id":"54","isCollapse":false,"index":54,"data":{"title":"HOC (Higher-Order Components)","section":"React","path":"HOC (Higher-Order Components)","subtitles":[{"subtitle":"Определение hoc","path":"HOC (Higher-Order Components)#Определение hoc"},{"subtitle":"Определение hoc на основе функционального компонента","path":"HOC (Higher-Order Components)#Определение hoc на основе функционального компонента"},{"subtitle":"Определение hoc на основе классового компонента","path":"HOC (Higher-Order Components)#Определение hoc на основе классового компонента"}]}},{"id":"55","isCollapse":false,"index":55,"data":{"title":"Пространства имен (namespace) и модули (module)","section":"Синтаксические конструкции","path":"Пространства имен (namespace) и модули (module)","subtitles":[{"subtitle":"Namespace и module — предназначение","path":"Пространства имен (namespace) и модули (module)#Namespace и module — предназначение"},{"subtitle":"Namespace - определение","path":"Пространства имен (namespace) и модули (module)#Namespace - определение"},{"subtitle":"Модули (export, import) — определение","path":"Пространства имен (namespace) и модули (module)#Модули (export, import) — определение"},{"subtitle":"Конфигурирование проекта","path":"Пространства имен (namespace) и модули (module)#Конфигурирование проекта"}]}},{"id":"56","isCollapse":false,"index":56,"data":{"title":"Настройка рабочего окружения","section":"Сборка","path":"Настройка рабочего окружения","subtitles":[{"subtitle":"Настройка рабочего окружения","path":"Настройка рабочего окружения#Настройка рабочего окружения"},{"subtitle":"Сборка проекта с помощью tsc (TypeScript compiler)","path":"Настройка рабочего окружения#Сборка проекта с помощью tsc (TypeScript compiler)"}]}},{"id":"57","isCollapse":false,"index":57,"data":{"title":"Сборка с использованием ссылок на проекты","section":"Сборка","path":"Сборка с использованием ссылок на проекты","subtitles":[{"subtitle":"Ссылки на проекты","path":"Сборка с использованием ссылок на проекты#Ссылки на проекты"}]}},{"id":"58","isCollapse":false,"index":58,"data":{"title":"Декларации","section":"Сборка","path":"Декларации","subtitles":[{"subtitle":"Что такое декларация (Declaration)","path":"Декларации#Что такое декларация (Declaration)"},{"subtitle":"Установка деклараций с помощью @types","path":"Декларации#Установка деклараций с помощью @types"},{"subtitle":"Подготовка к созданию декларации","path":"Декларации#Подготовка к созданию декларации"},{"subtitle":"Разновидности деклараций","path":"Декларации#Разновидности деклараций"},{"subtitle":"Декларации и область видимости","path":"Декларации#Декларации и область видимости"},{"subtitle":"Декларации для библиотек с одной точкой входа","path":"Декларации#Декларации для библиотек с одной точкой входа"},{"subtitle":"Декларации для библиотек с множеством точек входа","path":"Декларации#Декларации для библиотек с множеством точек входа"},{"subtitle":"Создание деклараций вручную","path":"Декларации#Создание деклараций вручную"},{"subtitle":"Директива с тройным слешем (triple-slash directives)","path":"Декларации#Директива с тройным слешем (triple-slash directives)"},{"subtitle":"Импортирование декларации (import)","path":"Декларации#Импортирование декларации (import)"}]}},{"id":"59","isCollapse":false,"index":59,"data":{"title":"Публикация TypeScript","section":"Сборка","path":"Публикация TypeScript","subtitles":[{"subtitle":"Публикация","path":"Публикация TypeScript#Публикация"}]}},{"id":"60","isCollapse":false,"index":60,"data":{"title":"Опции компилятора","section":"Компилятор","path":"Опции компилятора","subtitles":[{"subtitle":"strict","path":"Опции компилятора#strict"},{"subtitle":"suppressExcessPropertyErrors","path":"Опции компилятора#suppressExcessPropertyErrors"},{"subtitle":"suppressImplicitAnyIndexErrors","path":"Опции компилятора#suppressImplicitAnyIndexErrors"},{"subtitle":"noImplicitAny","path":"Опции компилятора#noImplicitAny"},{"subtitle":"checkJs","path":"Опции компилятора#checkJs"},{"subtitle":"JSX","path":"Опции компилятора#JSX"},{"subtitle":"jsxFactory","path":"Опции компилятора#jsxFactory"},{"subtitle":"target (t)","path":"Опции компилятора#target (t)"},{"subtitle":"extends","path":"Опции компилятора#extends"},{"subtitle":"alwaysStrict","path":"Опции компилятора#alwaysStrict"},{"subtitle":"strictNullChecks","path":"Опции компилятора#strictNullChecks"},{"subtitle":"stripInternal","path":"Опции компилятора#stripInternal"},{"subtitle":"noImplicitThis","path":"Опции компилятора#noImplicitThis"},{"subtitle":"noImplicitUseStrict","path":"Опции компилятора#noImplicitUseStrict"},{"subtitle":"baseUrl","path":"Опции компилятора#baseUrl"},{"subtitle":"paths","path":"Опции компилятора#paths"},{"subtitle":"rootDir","path":"Опции компилятора#rootDir"},{"subtitle":"rootDirs","path":"Опции компилятора#rootDirs"},{"subtitle":"traceResolution","path":"Опции компилятора#traceResolution"},{"subtitle":"lib","path":"Опции компилятора#lib"},{"subtitle":"noLib","path":"Опции компилятора#noLib"},{"subtitle":"noResolve","path":"Опции компилятора#noResolve"},{"subtitle":"noStrictGenericChecks","path":"Опции компилятора#noStrictGenericChecks"},{"subtitle":"preserveConstEnums","path":"Опции компилятора#preserveConstEnums"},{"subtitle":"removeComments","path":"Опции компилятора#removeComments"},{"subtitle":"noUnusedLocals","path":"Опции компилятора#noUnusedLocals"},{"subtitle":"noUnusedParameters","path":"Опции компилятора#noUnusedParameters"},{"subtitle":"skipLibCheck","path":"Опции компилятора#skipLibCheck"},{"subtitle":"declarationDir","path":"Опции компилятора#declarationDir"},{"subtitle":"types","path":"Опции компилятора#types"},{"subtitle":"typeRoots","path":"Опции компилятора#typeRoots"},{"subtitle":"allowUnusedLabels","path":"Опции компилятора#allowUnusedLabels"},{"subtitle":"noImplicitReturns","path":"Опции компилятора#noImplicitReturns"},{"subtitle":"noFallthroughCasesInSwitch","path":"Опции компилятора#noFallthroughCasesInSwitch"},{"subtitle":"outFile","path":"Опции компилятора#outFile"},{"subtitle":"allowSyntheticDefaultImports","path":"Опции компилятора#allowSyntheticDefaultImports"},{"subtitle":"allowUnreachableCode","path":"Опции компилятора#allowUnreachableCode"},{"subtitle":"allowJs","path":"Опции компилятора#allowJs"},{"subtitle":"reactNamespace","path":"Опции компилятора#reactNamespace"},{"subtitle":"pretty","path":"Опции компилятора#pretty"},{"subtitle":"moduleResolution","path":"Опции компилятора#moduleResolution"},{"subtitle":"exclude","path":"Опции компилятора#exclude"},{"subtitle":"noEmitHelpers","path":"Опции компилятора#noEmitHelpers"},{"subtitle":"newLine","path":"Опции компилятора#newLine"},{"subtitle":"inlineSourceMap","path":"Опции компилятора#inlineSourceMap"},{"subtitle":"inlineSources","path":"Опции компилятора#inlineSources"},{"subtitle":"noEmitOnError","path":"Опции компилятора#noEmitOnError"},{"subtitle":"noEmit","path":"Опции компилятора#noEmit"},{"subtitle":"charset","path":"Опции компилятора#charset"},{"subtitle":"diagnostics","path":"Опции компилятора#diagnostics"},{"subtitle":"declaration","path":"Опции компилятора#declaration"},{"subtitle":"downlevelIteration","path":"Опции компилятора#downlevelIteration"},{"subtitle":"emitBOM","path":"Опции компилятора#emitBOM"},{"subtitle":"emitDecoratorMetadata","path":"Опции компилятора#emitDecoratorMetadata"},{"subtitle":"forceConsistentCasingInFileNames","path":"Опции компилятора#forceConsistentCasingInFileNames"},{"subtitle":"help (h)","path":"Опции компилятора#help (h)"},{"subtitle":"importHelpers","path":"Опции компилятора#importHelpers"},{"subtitle":"isolatedModules","path":"Опции компилятора#isolatedModules"},{"subtitle":"listEmittedFiles","path":"Опции компилятора#listEmittedFiles"},{"subtitle":"listFiles","path":"Опции компилятора#listFiles"},{"subtitle":"sourceRoot","path":"Опции компилятора#sourceRoot"},{"subtitle":"mapRoot","path":"Опции компилятора#mapRoot"},{"subtitle":"maxNodeModuleJsDepth","path":"Опции компилятора#maxNodeModuleJsDepth"},{"subtitle":"project (p)","path":"Опции компилятора#project (p)"},{"subtitle":"init","path":"Опции компилятора#init"},{"subtitle":"version (v)","path":"Опции компилятора#version (v)"},{"subtitle":"watch (w)","path":"Опции компилятора#watch (w)"},{"subtitle":"preserveSymlinks","path":"Опции компилятора#preserveSymlinks"},{"subtitle":"strictFunctionTypes","path":"Опции компилятора#strictFunctionTypes"},{"subtitle":"locale","path":"Опции компилятора#locale"},{"subtitle":"strinctPropertyInitialization","path":"Опции компилятора#strinctPropertyInitialization"},{"subtitle":"esModuleInterop","path":"Опции компилятора#esModuleInterop"},{"subtitle":"emitDeclarationsOnly","path":"Опции компилятора#emitDeclarationsOnly"},{"subtitle":"resolveJsonModule","path":"Опции компилятора#resolveJsonModule"},{"subtitle":"declarationMap","path":"Опции компилятора#declarationMap"},{"subtitle":"strictBindCallApply","path":"Опции компилятора#strictBindCallApply"},{"subtitle":"showConfig","path":"Опции компилятора#showConfig"},{"subtitle":"build","path":"Опции компилятора#build"},{"subtitle":"verbose","path":"Опции компилятора#verbose"},{"subtitle":"dry","path":"Опции компилятора#dry"},{"subtitle":"clean","path":"Опции компилятора#clean"},{"subtitle":"force","path":"Опции компилятора#force"},{"subtitle":"incremental","path":"Опции компилятора#incremental"},{"subtitle":"tsBuildInfoFile","path":"Опции компилятора#tsBuildInfoFile"},{"subtitle":"allowUmdGlobalAccess","path":"Опции компилятора#allowUmdGlobalAccess"},{"subtitle":"disableSourceOfProjectReferenceRedirect","path":"Опции компилятора#disableSourceOfProjectReferenceRedirect"},{"subtitle":"useDefineForClassFields","path":"Опции компилятора#useDefineForClassFields"},{"subtitle":"importsNotUsedAsValues","path":"Опции компилятора#importsNotUsedAsValues"},{"subtitle":"assumeChangesOnlyAffectDirectDependencies","path":"Опции компилятора#assumeChangesOnlyAffectDirectDependencies"},{"subtitle":"watchFile","path":"Опции компилятора#watchFile"},{"subtitle":"watchDirectory","path":"Опции компилятора#watchDirectory"},{"subtitle":"fallbackPolling","path":"Опции компилятора#fallbackPolling"},{"subtitle":"synchronousWatchDirectory","path":"Опции компилятора#synchronousWatchDirectory"},{"subtitle":"noUncheckedIndexedAccess","path":"Опции компилятора#noUncheckedIndexedAccess"}]}}]}},"staticQueryHashes":["408059355","63159454"]}